# 服务端口
server.port=8080

# slf4j配置输出mybatis-dao相关的操作为DEBUG级别, 数据库日志会打印到debug文件中
logging.level.com.RuleApi.dao=DEBUG
logging.config=classpath:logback-spring.xml
logging.file=/log/RuleApi

# mybaits配置文件
mybatis.mapper-locations = classpath:mapper/*Mapper.xml
mybatis.type-aliases-package = com.RuleApi.entity

# mysql配置
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/typechoapi?characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=root

# redis配置
spring.session.store-type=redis
spring.redis.host=127.0.0.1
spring.redis.password=
spring.redis.port=6379
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-active=20
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=10
# 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=3000

# 邮件发送配置，实际测试来看，建议使用QQ邮箱
#POP3服务器: pop.qq.com
#SMTP服务器: smtp.qq.com
#IMAP服务器: imap.qq.com
spring.mail.host=smtp.qq.com
spring.mail.username=
#spring.mail.from不支持中文，需要中文，看mail.properties
spring.mail.password=
#465或者994
spring.mail.properties.mail.smtp.port: 465
spring.mail.properties.mail.smtp.ssl.enable: true
spring.mail.default-encoding=UTF-8


# 网站配置
# key为密钥，预留字段,usertime为用户登录状态过期时间，以秒为单位，默认为24小时可自行设置
# uploadUrl为图片或附件路径的域名，用于返回本地图片时的路径，可以设置为接口，也可以自定义域名反向代理接口再设置缓存。
# contentCache,contentInfoCache,CommentCache,userCache分别是文章列表，文章信息，评论列表，用户列表的缓存时间，单位是s
webinfo.title=规则之树
webinfo.url=http://127.0.0.49/
webinfo.key=123456
webinfo.usertime=86400
webinfo.contentCache=6
webinfo.contentInfoCache=60
webinfo.CommentCache=20
webinfo.userCache=10
webinfo.uploadUrl=http://127.0.0.1:8080/
webinfo.avatar=https://cdn.helingqi.com/wavatar/


# 对象存储，可不配置，提供本地上传和cos上传两种。
# 腾讯云
spring.cos.accessKey=
spring.cos.secretKey=
spring.cos.bucket=
spring.cos.bucketName=
spring.cos.path=
spring.cos.prefix=

# 阿里云
spring.aliyun.endpoint=
spring.aliyun.accessKeyId=
spring.aliyun.accessKeySecret=
spring.aliyun.bucketName=
spring.aliyun.urlPrefix=
#文件上传限制，单文件和总文件
spring.servlet.multipart.enabled: true
spring.servlet.multipart.max-file-size=20MB
spring.servlet.multipart.max-request-size=100MB